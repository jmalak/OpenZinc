name: Makefile CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.image }}
    strategy:
      matrix:
        include:
        - image:    'ubuntu-latest'
          dirsep:   ':'
        - image:    'windows-latest'
          dirsep:   ';'

    runs-on: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v4
    - name: Open Watcom setup
      uses: open-watcom/setup-watcom@v0
      with:
        version: "2.0"
    - name: Create build directories
      run: |
        mkdir bin
        mkdir lib
        mkdir include
      shell: bash
    - name: Open Zinc library
      run: |
        wmake -f ow20.mak -h dos32
        wmake -f ow20.mak -h windows
        wmake -f ow20.mak -h winnt
        wmake -f ow20.mak -h win32
        wmake -f ow20.mak -h os2
      shell: bash
      working-directory: source
      env:
        DOS_INCLUDE: ${{ env.WATCOM }}/h
        WINDOWS_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/win
        NT_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/nt
        OS2_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/os2
    - name: Open Zinc Designer Libraries
      run: |
        wmake -f ow20.mak -h make_dos32_modules
        wmake -f ow20.mak -h make_windows_modules
        wmake -f ow20.mak -h make_winnt_modules
        wmake -f ow20.mak -h make_win32_modules
        wmake -f ow20.mak -h make_os2_modules
      shell: bash
      working-directory: design
      env:
        DOS_INCLUDE: ${{ env.WATCOM }}/h
        WINDOWS_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/win
        NT_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/nt
        OS2_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/os2
    - name: Open Zinc Designer Executable
      run: |
        wmake -f ow20.mak -h dos32
        wmake -f ow20.mak -h windows
        wmake -f ow20.mak -h winnt
        wmake -f ow20.mak -h win32
        wmake -f ow20.mak -h os2
      shell: bash
      working-directory: design
      env:
        DOS_INCLUDE: ${{ env.WATCOM }}/h
        WINDOWS_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/win
        NT_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/nt
        OS2_INCLUDE: ${{ env.WATCOM }}/h${{ matrix.dirsep }}${{ env.WATCOM }}/h/os2
    - name: Zip files
      run: |
          if ($env:RUNNER_OS -eq "Windows") {
            7z a openzinc.zip bin lib include
          } else {
            zip -r openzinc.zip bin lib include
          }
      shell: pwsh
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name:    '${{ matrix.image }}-snapshot'
        path:    openzinc.zip
        overwrite: true
  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v*')
    runs-on: 'ubuntu-latest'
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name:    'ubuntu-latest-snapshot'
    - name: Create release
      run: |
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes \
            openzinc.zip
      with:
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
